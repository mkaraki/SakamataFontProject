name: Webwriter

on:
  push:
    branches:
      - "master"
    paths:
      - ".github/workflows/generate-webwriter.yml"
      - "build/**"
      - "chart-generator/**"
      - "raw/**"
      - "wwwroot/**"

jobs:
  ##### ===========================
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      # DEPEND

      - name: Install requirements
        run: build/_install_reqs_ubuntu.sh

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      # TTF/WOFF2 BUILD

      - name: Run build
        run: |
          cd build
          dotnet run

      # Upload

      - uses: actions/upload-artifact@v3
        with:
          name: generated-site-items
          path: |
            build/workdir/あ.svg
            build/*.sources.tsv

      - uses: actions/upload-artifact@v3
        with:
          name: generated-font
          path: |
            build/*.ttf
            build/*.sources.tsv

  ##### ===========================
  gen-chart:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: Run chart-generator
        run: |
          cd chart-generator
          dotnet run

      - uses: actions/upload-artifact@v3
        with:
          name: generated-charts
          path: chart-generator/output/*

  ##### ===========================
  build-web:
    runs-on: ubuntu-latest
    needs:
      - build
      - gen-chart

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: generated-site-items
          path: ~/artifact/site

      - uses: actions/download-artifact@v3
        with:
          name: generated-charts
          path: ~/artifact/chart

      # DEP

      - name: Setup Node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: "16.x"

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # place files

      - name: Copy data
        run: |
          cp ~/artifact/chart/char.tsv wwwroot/static/
          cp ~/artifact/site/*.sources.tsv wwwroot/static/
          mkdir wwwroot/src/images
          cp ~/artifact/site/workdir/あ.svg wwwroot/src/images/icon.svg

      # BUILD/DEPLOY

      - name: Build Site
        run: |
          cd wwwroot/
          pnpm install
          pnpm run build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./wwwroot/public

  ##### ===========================
  build-webfont:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: generated-font
          path: fonts

      - name: Install woff2
        run: sudo apt-get install -y woff2

      - name: Compress to woff2
        run: |
          woff2_compress fonts/sakamata-v1.ttf

      - uses: actions/upload-artifact@v3
        with:
          name: webfont
          path: fonts/*.woff2

      - name: Deploy font files
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          username: ${{ secrets.BLOB_UPLOAD_USER }}
          server: ${{ secrets.BLOB_UPLOAD_HOST }}
          ssh_private_key: ${{ secrets.BLOB_SFTP_KEY }}
          sftp_only: true
          local_path: "./fonts/*.woff2"
          remote_path: "/blob.sakamata.ch/font/"
